---
  OpenAPI: "2.0"
  info:
    version: "1.0.0"
    title: "Example API"
    description: "An example API that demonstrates REST-api implementation best practice in Brønnøysundregistrene"
    termsOfService: "http://swagger.io/terms/"
    contact:
      name: "Informasjonsforvaltning API Team"
    license:
      name: "MIT"
  host: "localhost:8080"
  basePath: ""
  schemes:
    - "http"
  consumes:
    - "application/json"
  produces:
    - "application/json"
  paths:
    /pets:
      get:
        description: "Returns all pets from the system that the user has access to"
        produces:
          - "application/json"
        responses:
          "200":
            description: "A list of pets."
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Pet"
      post:
        summary: Create a pet
        operationId: createPets
        consumes:
          - application/json
        parameters:
          - in: body
            name: pet
            description: The pet to create
            schema:
              type: object
              required:
                - name
                - species
              properties:
                name:
                  type: string
                species:
                  type: string
        responses:
          "201":
            description: Created
            headers:
              Location:
                schema:
                  type: string
    /pets/{id}:
      get:
        description: "Returns a pet with the given id from the system that the user has access to"
        parameters:
              - name: id
                in: path
                required: true
                description: The id of the pet to retrieve
                type: string
        produces:
          - "application/json"
        responses:
          "200":
            description: "A pet with the given id."
            schema:
              type: "object"
              items:
                $ref: "#/definitions/Pet"
      put:
        summary: Update a pet
        operationId: updatePet
        consumes:
          - application/json
        parameters:
          - name: id
            in: path
            required: true
            description: The id of the pet to update
            type: string
          - in: body
            name: pet
            description: The pet to update
            schema:
              type: object
              required:
                - name
                - species
              properties:
                name:
                  type: string
                species:
                  type: string
        responses:
          "204":
            description: Updated
      delete:
        description: deletes a single pet based on the ID supplied
        operationId: deletePet
        parameters:
          - name: id
            in: path
            description: ID of pet to delete
            required: true
            type: integer
            format: int64
        responses:
          "204":
            description: pet deleted
  definitions:
    Pet:
      type: "object"
      required:
        - "id"
        - "name"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        species:
          type: "string"
